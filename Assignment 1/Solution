
Nikhil Meshram	
Principles of Programming Languages (CS-314)
Professor Ulrich Kremer
Section 02

Assignment 1
Solutions

1.	Problem – Three simple rewrite systems
i.	f(x) = x+1, x > 0 

Rules for the rewrite system:
Rule 1: $|  |$
Rule 2: $#  |

Computation Example:
$|||#
	 	|$||#
	   	||$|#
	 	|||$#
	 	||||
ii.	f(x) = 2*x, x > 0

Rules for the rewrite system:
Rule 1: $|  ||$
Rule 2: $|#  ||

Computation Example:
$|||#
	 	||$||#
	   	||||$|#
	 	||||||
iii.	f(x,y) = x + y, x > 0, y > 0

Rules for the rewrite system:
Rule 1: $|  |$
Rule 2: $|&  |$
Rule 3: $|#  |

Computation Example:
$||&|||#
	 	|$|&|||#
	   	||$|||#
	 	|||$||#
	 	||||$|#
	 	|||||

2.	Problem – A rewrite system for modulo 3 addition
i.	Rewrite System for modulo 3 expressions

Rules for computation:
Rule 1: (( (
Rule 2: (1+  1+
Rule 3: (0+  0+
Rule 4: (2+  2+
Rule 5: 1 + 0  1
Rule 6: 1 + 1  2
Rule 7: 1 + 2  0
Rule 8: 0 + 0  0
Rule 9: 0 + 1  1
Rule 10: 0 + 2  2
Rule 11: 2 + 0  2
Rule 12: 2 + 1  0
Rule 13: 2 + 2  1
Rule 14: 2)  2
Rule 15: 0)  0
Rule 16: 1)  1

ii.	Examples for computation:
a.	((1+2)+0)
	(1+2)+0)
	1+2)+0)
	0)+0)
	0+0)
	0)
	0
b.	(1+(2+2))
	1+(2+2))
	1+2+2))
	0+2))
	2))
	2)
	2
iii.	No. The rewrite system is not unique because we can proceed to the next step by using a different set of rules. 
Example:
(1+(2+2))
	1+(2+2))
	1+2+2))
In the step above we can proceed with any rule that is, Rule 7 or Rule 13.
	0+2))
	2))
	2)
	2

3.	Problem – Regular Expressions
i.	Yes, we can eliminate r+ from our language and not reduce its expressiveness. The regular expression that we can use is r.r* 
ii.	Yes, we can eliminate r+ and r* from our language and not reduce its expressiveness. The regular expressions that we can use are:
A.	 r|s (where s ∈ L(r) ∪ L(rr) ∪…….)
B.	ε|r|s (where s ∈ L(r) ∪ L(rr) ∪…….)

4.	Problem – Regular Expressions
i.	Regular Expression: ε(digit)+(digit)+

5.	Problem 5 – Regular Expressions
i.	Strings of a’s and b’s.
ii.	Strings of 0’s and 1’s with even number of 1’s

6.	Problem 6 – Regular Expressions
